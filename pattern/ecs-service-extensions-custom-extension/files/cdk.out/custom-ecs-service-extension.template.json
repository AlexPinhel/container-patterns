{
  "Resources": {
    "testenvironmentenvironmentvpcCEC3622D": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet1Subnet3D14E9ED": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet1RouteTable2B08B96E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet1RouteTableAssociation9D7C7765": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet1RouteTable2B08B96E"
        },
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet1Subnet3D14E9ED"
        }
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet1DefaultRouteBB70E04B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet1RouteTable2B08B96E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testenvironmentenvironmentvpcIGW22841E79"
        }
      },
      "DependsOn": [
        "testenvironmentenvironmentvpcVPCGWCC0F6E77"
      ]
    },
    "testenvironmentenvironmentvpcPublicSubnet1EIP5BAB6BE4": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet1NATGateway5B0537AD": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet1Subnet3D14E9ED"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "testenvironmentenvironmentvpcPublicSubnet1EIP5BAB6BE4",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet2SubnetFDFAAD1D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet2RouteTable40EBFC6D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet2RouteTableAssociation8A3CEF7B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet2RouteTable40EBFC6D"
        },
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet2SubnetFDFAAD1D"
        }
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet2DefaultRouteF7DF3524": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet2RouteTable40EBFC6D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testenvironmentenvironmentvpcIGW22841E79"
        }
      },
      "DependsOn": [
        "testenvironmentenvironmentvpcVPCGWCC0F6E77"
      ]
    },
    "testenvironmentenvironmentvpcPublicSubnet2EIPE6528402": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPublicSubnet2NATGateway0DF824A6": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet2SubnetFDFAAD1D"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "testenvironmentenvironmentvpcPublicSubnet2EIPE6528402",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet1Subnet17F0A975": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet1RouteTable760E87FE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet1RouteTableAssociation6DC98516": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet1RouteTable760E87FE"
        },
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet1Subnet17F0A975"
        }
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet1DefaultRoute551EF7E2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet1RouteTable760E87FE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet1NATGateway5B0537AD"
        }
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet2SubnetB8A881E1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet2RouteTable52C73A13": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet2RouteTableAssociation798FD406": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet2RouteTable52C73A13"
        },
        "SubnetId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet2SubnetB8A881E1"
        }
      }
    },
    "testenvironmentenvironmentvpcPrivateSubnet2DefaultRoute85DB5B1E": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testenvironmentenvironmentvpcPrivateSubnet2RouteTable52C73A13"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "testenvironmentenvironmentvpcPublicSubnet2NATGateway0DF824A6"
        }
      }
    },
    "testenvironmentenvironmentvpcIGW22841E79": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "custom-ecs-service-extension/test-environment-environment-vpc"
          }
        ]
      }
    },
    "testenvironmentenvironmentvpcVPCGWCC0F6E77": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        },
        "InternetGatewayId": {
          "Ref": "testenvironmentenvironmentvpcIGW22841E79"
        }
      }
    },
    "testenvironmentenvironmentclusterF01384A4": {
      "Type": "AWS::ECS::Cluster"
    },
    "testservicetaskdefinitionTaskRoleD4F1D568": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testservicetaskdefinition4C7A523E": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl localhost:80"
              ],
              "Interval": 5,
              "Retries": 2,
              "StartPeriod": 20,
              "Timeout": 5
            },
            "Image": "public.ecr.aws/nginx/nginx",
            "Memory": 2048,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          },
          {
            "Environment": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
              }
            ],
            "Essential": true,
            "Image": "public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "testservicetaskdefinitioncloudwatchagentLogGroup5D94F4ED"
                },
                "awslogs-stream-prefix": "cloudwatch-agent",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "cloudwatch-agent",
            "User": "0:1338"
          }
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "testservicetaskdefinitionExecutionRoleCD18B710",
            "Arn"
          ]
        },
        "Family": "customecsserviceextensiontestservicetaskdefinition216EC511",
        "Memory": "4096",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "testservicetaskdefinitionTaskRoleD4F1D568",
            "Arn"
          ]
        }
      }
    },
    "testservicetaskdefinitioncloudwatchagentLogGroup5D94F4ED": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "testservicetaskdefinitionExecutionRoleCD18B710": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "testservicetaskdefinitionExecutionRoleDefaultPolicy719FC8D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testservicetaskdefinitioncloudwatchagentLogGroup5D94F4ED",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testservicetaskdefinitionExecutionRoleDefaultPolicy719FC8D1",
        "Roles": [
          {
            "Ref": "testservicetaskdefinitionExecutionRoleCD18B710"
          }
        ]
      }
    },
    "testservicepublishmetrics340BAF54": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testservicepublishmetrics340BAF54",
        "Roles": [
          {
            "Ref": "testservicetaskdefinitionTaskRoleD4F1D568"
          }
        ]
      }
    },
    "testserviceserviceService8CABA332": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "testenvironmentenvironmentclusterF01384A4"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 120,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "testserviceserviceSecurityGroup2B09375C",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "testenvironmentenvironmentvpcPrivateSubnet1Subnet17F0A975"
              },
              {
                "Ref": "testenvironmentenvironmentvpcPrivateSubnet2SubnetB8A881E1"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "testservicetaskdefinition4C7A523E"
        }
      }
    },
    "testserviceserviceSecurityGroup2B09375C": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "custom-ecs-service-extension/test-service-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "testenvironmentenvironmentvpcCEC3622D"
        }
      }
    },
    "testserviceserviceTaskCountTarget966AE5A2": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 10,
        "MinCapacity": 2,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "testenvironmentenvironmentclusterF01384A4"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "testserviceserviceService8CABA332",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "testserviceserviceTaskCountTargetCpuScaling54350C24": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "customecsserviceextensiontestserviceserviceTaskCountTargetCpuScalingF2D1EFE8",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "testserviceserviceTaskCountTarget966AE5A2"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "TargetValue": 50
        }
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}